{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar passResetScreen = function passResetScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var verifica = function verifica() {\n    if (email !== '') {\n      forgotPassword();\n    } else {\n      Alert.alert(\"\", \"Por favor, verifique se o campo email foi preenchido.\");\n    }\n  };\n\n  function forgotPassword() {\n    return _regeneratorRuntime.async(function forgotPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().sendPasswordResetEmail(email).then(function () {\n              Alert.alert(\"Redefinição enviada!\", \"Por favor, verifique o seu email.\");\n              {\n                try {\n                  navigation.navigate('Home');\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            }).catch(function (error) {\n              alert(error.message);\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              console.log(errorCode);\n              console.log(errorMessage);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -280,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsxs(ScrollView, {\n        children: [_jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsx(View, {\n            style: styles.containerTop,\n            children: _jsx(Text, {\n              style: styles.sectionText,\n              children: \"Preencha as informa\\xE7\\xF5es abaixo para redefinir sua senha.\"\n            })\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            borderRadius: 40,\n            overflow: \"hidden\",\n            backgroundColor: '#1B2727',\n            marginTop: 30\n          },\n          children: _jsx(TouchableNativeFeedback, {\n            background: TouchableNativeFeedback.Ripple('#F54038'),\n            onPress: verifica,\n            children: _jsx(View, {\n              style: styles.button,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Login\"\n              })\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default passResetScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  HelpMeWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: \"Inter_600SemiBold\"\n  },\n  sectionText: {\n    fontSize: 20,\n    fontFamily: 'Inter_500Medium'\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: 150\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  buttonContainer: {\n    width: '100%',\n    marginTop: 20,\n    padding: 18,\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: '#0c72c4',\n    width: '100%',\n    height: 70,\n    fontFamily: 'Inter_500Medium',\n    fontSize: 27,\n    textAlign: 'center',\n    color: 'white',\n    textAlignVertical: 'center',\n    paddingBottom: 5,\n    marginBottom: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["D:/Códigos/MooviePlus/MooviePlus/screens/passResetScreen.js"],"names":["React","useState","useNavigation","passResetScreen","navigation","email","SetEmail","verifica","forgotPassword","Alert","alert","firebase","auth","sendPasswordResetEmail","then","navigate","err","console","error","catch","message","errorCode","code","errorMessage","log","styles","container","HelpMeWrapper","containerTop","sectionText","inputContainer","text","input","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","StyleSheet","create","flex","paddingTop","paddingHorizontal","sectionTitle","fontSize","fontFamily","padding","width","height","buttonContainer","justifyContent","textAlign","color","textAlignVertical","paddingBottom","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAG1B,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AAEA,kBAA0BD,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAGA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,QAAKF,KAAD,KAAY,EAAhB,EAAqB;AACjBG,MAAAA,cAAc;AACb,KAFL,MAEU;AACFC,MAAAA,KAAK,CAACC,KAAN,CACA,EADA,EAEA,uDAFA;AAIH;AACJ,GATL;;AAYA,WAAeF,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUG,QAAQ,CAACC,IAAT,GAAgBC,sBAAhB,CAAuCR,KAAvC,EACDS,IADC,CACI,YAAM;AACRL,cAAAA,KAAK,CAACC,KAAN,CACA,sBADA,EAEA,mCAFA;AAIJ;AACI,oBAAI;AACAN,kBAAAA,UAAU,CAACW,QAAX,CAAoB,MAApB;AACH,iBAFD,CAEE,OAAOC,GAAP,EAAY;AACVC,kBAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACP;AAAC;AACD,aAZC,EAaLG,KAbK,CAaC,UAACD,KAAD,EAAW;AACdR,cAAAA,KAAK,CAACQ,KAAK,CAACE,OAAP,CAAL;AACA,kBAAIC,SAAS,GAAGH,KAAK,CAACI,IAAtB;AACA,kBAAIC,YAAY,GAAGL,KAAK,CAACE,OAAzB;AACAH,cAAAA,OAAO,CAACO,GAAR,CAAYH,SAAZ;AACAJ,cAAAA,OAAO,CAACO,GAAR,CAAYD,YAAZ;AACH,aAnBK,CAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBA,SACI,KAAC,oBAAD;AAAsB,IAAA,sBAAsB,EAAK,CAAC,GAAlD;AAAwD,IAAA,KAAK,EAAGE,MAAM,CAACC,SAAvE;AAAmF,IAAA,QAAQ,EAAC,SAA5F;AAAA,cAEA,KAAC,YAAD;AAAA,gBACA,MAAC,UAAD;AAAA,mBAEA,MAAC,IAAD;AAAM,UAAA,KAAK,EAAGD,MAAM,CAACE,aAArB;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAGF,MAAM,CAACG,YAArB;AAAA,sBAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAGH,MAAM,CAACI,WAArB;AAAA;AAAA;AAFJ,YADJ,EAOI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAGJ,MAAM,CAACK,cAArB;AAAA,uBAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAGL,MAAM,CAACM,IAArB;AAAA;AAAA,cAFJ,EAGI,KAAC,SAAD;AAAW,cAAA,WAAW,EAAC,mBAAvB;AAA2C,cAAA,KAAK,EAAGN,MAAM,CAACO,KAA1D;AAAkE,cAAA,KAAK,EAAE3B,KAAzE;AAAgF,cAAA,YAAY,EAAE,sBAAA0B,IAAI;AAAA,uBAAIzB,QAAQ,CAACyB,IAAD,CAAZ;AAAA;AAAlG,cAHJ;AAAA,YAPJ;AAAA,UAFA,EAgBA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,YAAY,EAAE,EAAhB;AAAoBC,YAAAA,QAAQ,EAAE,QAA9B;AAAwCC,YAAAA,eAAe,EAAE,SAAzD;AAAoEC,YAAAA,SAAS,EAAE;AAA/E,WAAb;AAAA,oBACgB,KAAC,uBAAD;AAAyB,YAAA,UAAU,EAAEC,uBAAuB,CAACC,MAAxB,CAA+B,SAA/B,CAArC;AAAgF,YAAA,OAAO,EAAE/B,QAAzF;AAAA,sBAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAGkB,MAAM,CAACc,MAArB;AAAA,wBACI,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAGd,MAAM,CAACe,UAArB;AAAA;AAAA;AADJ;AAFJ;AADhB,UAhBA;AAAA;AADA;AAFA,IADJ;AAmCH,CA/ED;;AAiFA,eAAerC,eAAf;AAEA,IAAMsB,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,SAAS,EAAC;AACNiB,IAAAA,IAAI,EAAE;AADA,GADmB;AAI7BhB,EAAAA,aAAa,EAAC;AACViB,IAAAA,UAAU,EAAE,EADF;AAEVC,IAAAA,iBAAiB,EAAE;AAFT,GAJe;AAQ7BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE;AAFH,GARgB;AAY7BnB,EAAAA,WAAW,EAAC;AACRkB,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAZiB;AAgB7BjB,EAAAA,IAAI,EAAC;AACDgB,IAAAA,QAAQ,EAAE,EADT;AAEDE,IAAAA,OAAO,EAAE,IAFR;AAGDD,IAAAA,UAAU,EAAE;AAHX,GAhBwB;AAqB7BlB,EAAAA,cAAc,EAAC;AACXoB,IAAAA,KAAK,EAAC,MADK;AAEXd,IAAAA,SAAS,EAAE;AAFA,GArBc;AAyB7BJ,EAAAA,KAAK,EAAC;AACFG,IAAAA,eAAe,EAAE,SADf;AAEFgB,IAAAA,MAAM,EAAE,EAFN;AAGFlB,IAAAA,YAAY,EAAE,EAHZ;AAIFgB,IAAAA,OAAO,EAAE,EAJP;AAKFF,IAAAA,QAAQ,EAAE,EALR;AAMFC,IAAAA,UAAU,EAAE;AANV,GAzBuB;AAiC7BI,EAAAA,eAAe,EAAC;AACZF,IAAAA,KAAK,EAAE,MADK;AAEZd,IAAAA,SAAS,EAAE,EAFC;AAGZa,IAAAA,OAAO,EAAE,EAHG;AAIZI,IAAAA,cAAc,EAAE;AAJJ,GAjCa;AAuC7Bd,EAAAA,MAAM,EAAC;AACHJ,IAAAA,eAAe,EAAE,SADd;AAEHe,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,MAAM,EAAE,EAHL;AAIHH,IAAAA,UAAU,EAAE,iBAJT;AAKHD,IAAAA,QAAQ,EAAE,EALP;AAMHO,IAAAA,SAAS,EAAE,QANR;AAOHC,IAAAA,KAAK,EAAE,OAPJ;AAQHC,IAAAA,iBAAiB,EAAE,QARhB;AASHC,IAAAA,aAAa,EAAE,CATZ;AAUHC,IAAAA,YAAY,EAAE,EAVX;AAWHzB,IAAAA,YAAY,EAAE;AAXX;AAvCsB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, SafeAreaView, ScrollView, TouchableOpacity } from 'react-native'\r\nimport { useState } from 'react';\r\n//import { initializeApp } from 'firebase/app';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst passResetScreen = () => {\r\n    \r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [email, SetEmail] = useState('')\r\n\r\n    \r\n    const verifica = () =>{\r\n        if ((email) !== '' ) {\r\n            forgotPassword()\r\n            } else{\r\n                Alert.alert(\r\n                \"\",\r\n                \"Por favor, verifique se o campo email foi preenchido.\",\r\n                )\r\n            }\r\n        }\r\n\r\n    //redefinir Senha\r\n    async function forgotPassword(){\r\n        //redefinir Senha\r\n        await firebase.auth().sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                Alert.alert(\r\n                \"Redefinição enviada!\",\r\n                \"Por favor, verifique o seu email.\",\r\n                );\r\n            {\r\n                try {\r\n                    navigation.navigate('Home');\r\n                } catch (err) {\r\n                    console.error(err);\r\n            }}\r\n            })\r\n        .catch((error) => {\r\n            alert(error.message)\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -280 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n\r\n        <View style={ styles.HelpMeWrapper }>\r\n            <View style={ styles.containerTop }>\r\n          \r\n                <Text style={ styles.sectionText}>Preencha as informações abaixo para redefinir sua senha.</Text>\r\n\r\n            </View>\r\n\r\n            <View style={ styles.inputContainer }>\r\n\r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n            </View>\r\n        </View>\r\n\r\n        <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#1B2727', marginTop: 30}}>\r\n                        <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#F54038')} onPress={verifica}>\r\n                                \r\n                            <View style={ styles.button }>\r\n                                <Text style={ styles.buttonText }>Login</Text>\r\n                            </View>\r\n\r\n                        </TouchableNativeFeedback>\r\n                    </View>\r\n\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default passResetScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n    },\r\n    HelpMeWrapper:{\r\n        paddingTop: 80,\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionTitle:{\r\n        fontSize: 24,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n    },\r\n    sectionText:{\r\n        fontSize: 20,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    text:{\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n    },\r\n    inputContainer:{\r\n        width:'100%',\r\n        marginTop: 150  \r\n    },\r\n    input:{\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    buttonContainer:{\r\n        width: '100%',\r\n        marginTop: 20,\r\n        padding: 18,\r\n        justifyContent: 'center',\r\n    },\r\n    button:{\r\n        backgroundColor: '#0c72c4',\r\n        width: '100%',\r\n        height: 70,\r\n        fontFamily: 'Inter_500Medium',\r\n        fontSize: 27,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textAlignVertical: 'center',\r\n        paddingBottom: 5,\r\n        marginBottom: 10,\r\n        borderRadius: 10\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}