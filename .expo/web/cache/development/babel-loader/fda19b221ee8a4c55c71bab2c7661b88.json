{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { useNavigation } from '@react-navigation/native';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar loginScreen = function loginScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      SetPassword = _useState4[1];\n\n  var verifica = function verifica() {\n    if ((email, password) !== '') {\n      handleSingIn();\n    } else {\n      Alert.alert(\"Campos em branco\", \"Por favor, verifique se os campos foram preenchidos.\");\n    }\n  };\n\n  var handleSingIn = function handleSingIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(\"Algo deu errado\", errorMessage);\n    });\n    console.log(\"Initial.Screen | success, navigating to Sing In Screen\");\n  };\n\n  var goPassReset = function goPassReset() {\n    console.log(\"Initial.Screen | success, navigating to Sing In Screen\");\n    navigation.navigate(\"PassReset\");\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -280,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Senha\"\n            }), _jsx(TextInput, {\n              placeholder: \"Digite sua senha\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return SetPassword(text);\n              },\n              secureTextEntry: true\n            }), _jsx(TouchableOpacity, {\n              onPress: goPassReset,\n              style: styles.esqueciButton,\n              children: _jsx(Text, {\n                style: styles.esqueciButton,\n                children: \"Esqueci minha senha.\"\n              })\n            })]\n          }), _jsx(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#F54038',\n              marginTop: 30\n            },\n            children: _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              onPress: verifica,\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Login\"\n                })\n              })\n            })\n          }), _jsx(StatusBar, {\n            style: \"light\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default loginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  HelpMeWrapper: {\n    paddingTop: 10,\n    paddingHorizontal: 20\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold',\n    color: '#ffff'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: 150\n  },\n  esqueciButton: {\n    fontSize: 16,\n    fontFamily: \"Inter_600SemiBold\",\n    color: '#ffff',\n    marginTop: 8\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  }\n});","map":{"version":3,"sources":["D:/CÃ³digos/MooviePlus/MooviePlus/screens/loginScreen.js"],"names":["React","useState","useEffect","StatusBar","useNavigation","auth","loginScreen","navigation","email","SetEmail","password","SetPassword","verifica","handleSingIn","Alert","alert","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","console","log","goPassReset","navigate","styles","container","HelpMeWrapper","inputContainer","text","input","esqueciButton","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","padding","fontFamily","color","width","height","flexDirection","alignItems","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity, KeyboardAvoidingView, TextInput,TouchableNativeFeedback, Alert } from 'react-native'\r\nimport { useState, useEffect} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { auth } from '../firebase';\r\n\r\nconst loginScreen = () => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [email, SetEmail] = useState('')\r\n    const [password, SetPassword] = useState('')\r\n\r\n    const verifica = () =>{\r\n        if ((email, password) !== '' ) {\r\n            handleSingIn()\r\n            } else{\r\n                Alert.alert(\r\n                \"Campos em branco\",\r\n                \"Por favor, verifique se os campos foram preenchidos.\",\r\n                )\r\n            }\r\n    }\r\n\r\n    const handleSingIn = () => {\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .catch((error) => {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            Alert.alert(\r\n                \"Algo deu errado\",\r\n                errorMessage,\r\n            )\r\n        });\r\n        console.log(\"Initial.Screen | success, navigating to Sing In Screen\");\r\n    }\r\n\r\n    const goPassReset = () => {\r\n        console.log(\"Initial.Screen | success, navigating to Sing In Screen\");\r\n        navigation.navigate(\"PassReset\");\r\n    }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -280 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n\r\n        <View style={ styles.HelpMeWrapper }>\r\n\r\n            <View style={ styles.inputContainer }>\r\n                \r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n\r\n                <Text style={ styles.text }>Senha</Text>\r\n                <TextInput placeholder=\"Digite sua senha\" selectionColor={'grey'} style={ styles.input } value={password} onChangeText={text => SetPassword(text)} secureTextEntry></TextInput>\r\n\r\n                <TouchableOpacity onPress={goPassReset} style={ styles.esqueciButton }>\r\n\r\n                    <Text style={ styles.esqueciButton }>Esqueci minha senha.</Text>\r\n\r\n                </TouchableOpacity>\r\n            \r\n            </View>\r\n        \r\n            <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 30}}>\r\n                        <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={verifica}>\r\n                                \r\n                            <View style={ styles.button }>\r\n                                <Text style={ styles.buttonText }>Login</Text>\r\n                            </View>\r\n\r\n                        </TouchableNativeFeedback>\r\n                    </View>\r\n            <StatusBar style=\"light\" />\r\n        </View>\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default loginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor: '#000'\r\n    },\r\n    HelpMeWrapper:{\r\n        paddingTop: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    text:{\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n        color: '#ffff'\r\n    },\r\n    inputContainer:{\r\n        width:'100%',\r\n        marginTop: 150  \r\n    },\r\n    esqueciButton:{\r\n        fontSize: 16,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n        color: '#ffff',\r\n        marginTop: 8\r\n    },\r\n    input:{\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    button:{\r\n        flexDirection: 'row',\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}