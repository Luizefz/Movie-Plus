{"ast":null,"code":"import React, { useLayoutEffect, cleanup } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { auth } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar homeScreen = function homeScreen() {\n  var navigation = useNavigation();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        _jsx(TouchableNativeFeedback, {\n          background: TouchableNativeFeedback.Ripple('#1B2727'),\n          onPress: handleSingOut,\n          children: _jsx(MaterialIcons, {\n            name: \"logout\",\n            size: 24,\n            color: \"black\"\n          })\n        });\n      }\n    });\n    return function () {\n      cleanup;\n    };\n  }, []);\n\n  var handleSingOut = function handleSingOut() {\n    auth.signOut().then(function () {\n      console.log(\"Home.Screen | btn-logOut, logged out and navigating to Initial Screen\");\n      navigation.popToTop();\n    });\n  };\n\n  return _jsx(View, {\n    style: {\n      borderRadius: 40,\n      overflow: \"hidden\",\n      backgroundColor: '#F54038',\n      marginTop: 30\n    },\n    children: _jsx(TouchableNativeFeedback, {\n      background: TouchableNativeFeedback.Ripple('#1B2727'),\n      onPress: handleSingOut,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })\n  });\n};\n\nexport default homeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  }\n});","map":{"version":3,"sources":["D:/CÃ³digos/MooviePlus/MooviePlus/screens/homeScreen.js"],"names":["React","useLayoutEffect","cleanup","auth","useNavigation","MaterialIcons","homeScreen","navigation","setOptions","headerRight","TouchableNativeFeedback","Ripple","handleSingOut","signOut","then","console","log","popToTop","borderRadius","overflow","backgroundColor","marginTop","styles","button","buttonText","StyleSheet","create","container","flex","flexDirection","height","alignItems","justifyContent","fontFamily","textAlign","color","fontSize"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,OAAjC,QAAgD,OAAhD;;;;;AAEA,SAASC,IAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAErB,MAAMC,UAAU,GAAGH,aAAa,EAAhC;AAGAH,EAAAA,eAAe,CAAC,YAAM;AAClBM,IAAAA,UAAU,CAACC,UAAX,CAAsB;AAClBC,MAAAA,WAAW,EAAE,uBAAM;AACf,aAAC,uBAAD;AAAyB,UAAA,UAAU,EAAEC,uBAAuB,CAACC,MAAxB,CAA+B,SAA/B,CAArC;AAAgF,UAAA,OAAO,EAAEC,aAAzF;AAAA,oBACI,KAAC,aAAD;AAAe,YAAA,IAAI,EAAC,QAApB;AAA6B,YAAA,IAAI,EAAE,EAAnC;AAAuC,YAAA,KAAK,EAAC;AAA7C;AADJ;AAGH;AALiB,KAAtB;AAOA,WAAO,YAAM;AACTV,MAAAA,OAAO;AACV,KAFD;AAGH,GAXc,EAWZ,EAXY,CAAf;;AAaA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBT,IAAAA,IAAI,CAACU,OAAL,GACKC,IADL,CACU,YAAM;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,uEAAZ;AACAT,MAAAA,UAAU,CAACU,QAAX;AAEH,KALL;AAMH,GAPD;;AASA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,QAAQ,EAAE,QAA9B;AAAwCC,MAAAA,eAAe,EAAE,SAAzD;AAAoEC,MAAAA,SAAS,EAAE;AAA/E,KAAb;AAAA,cACI,KAAC,uBAAD;AAAyB,MAAA,UAAU,EAAEX,uBAAuB,CAACC,MAAxB,CAA+B,SAA/B,CAArC;AAAgF,MAAA,OAAO,EAAEC,aAAzF;AAAA,gBAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACC,MAApB;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,UAApB;AAAA;AAAA;AADJ;AAFJ;AADJ,IADJ;AAWH,CAtCD;;AAwCA,eAAelB,UAAf;AAEA,IAAMgB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPR,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BG,EAAAA,MAAM,EAAE;AACJM,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE;AAJZ,GALqB;AAW7BR,EAAAA,UAAU,EAAE;AACRS,IAAAA,UAAU,EAAE,iBADJ;AAERC,IAAAA,SAAS,EAAE,QAFH;AAGRC,IAAAA,KAAK,EAAE,SAHC;AAIRC,IAAAA,QAAQ,EAAE;AAJF;AAXiB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, cleanup } from 'react'\r\nimport { StyleSheet, Text, View, TouchableNativeFeedback } from 'react-native'\r\nimport { auth } from '../firebase';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst homeScreen = () => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () => {\r\n                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={handleSingOut}>\r\n                    <MaterialIcons name=\"logout\" size={24} color=\"black\" />\r\n                </TouchableNativeFeedback>\r\n            }\r\n        })\r\n        return () => {\r\n            cleanup\r\n        };\r\n    }, [])\r\n\r\n    const handleSingOut = () => {\r\n        auth.signOut()\r\n            .then(() => {\r\n                console.log(\"Home.Screen | btn-logOut, logged out and navigating to Initial Screen\");\r\n                navigation.popToTop();\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 30 }}>\r\n            <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={handleSingOut}>\r\n\r\n                <View style={styles.button}>\r\n                    <Text style={styles.buttonText}>Login</Text>\r\n                </View>\r\n\r\n            </TouchableNativeFeedback>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default homeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000'\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        height: 20,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}