{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Toast from 'react-native-simple-toast';\nimport { StatusBar } from 'expo-status-bar';\nimport { useNavigation } from '@react-navigation/native';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar loginScreen = function loginScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      SetEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      SetPassword = _useState6[1];\n\n  var verifica = function verifica() {\n    if ((email, password) !== '') {\n      setLoading(true);\n      SingIn();\n    } else {\n      setLoading(false);\n      Toast.show('Por favor, verifique se todos os campos foram preenchidos.');\n    }\n  };\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(auth, function (user) {\n      if (user) {\n        navigation.replace('Home');\n      } else {\n        navigation.canGoBack() && navigation.popToTop();\n      }\n    });\n    return unsubscribe;\n  });\n\n  var SingIn = function SingIn() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      console.log(\"Login.Screen | Login-success, navigating to Home Screen\");\n      console.log(\"Initial.Screen | \", user.displayName);\n      navigation.replace('Home');\n      setLoading(false);\n    }).catch(function (error) {\n      var errorMessage = error.message;\n      setLoading(false);\n      Toast.show('Email/Senha incorretos. Verifique os campos preenchidos.', Toast.LONG);\n    });\n  };\n\n  var goPassReset = function goPassReset() {\n    console.log(\"Initial.Screen | btn-PassReset, navigating to passReset Screen\");\n    navigation.navigate(\"PassReset\");\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -280,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Senha\"\n            }), _jsx(TextInput, {\n              placeholder: \"Digite sua senha\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return SetPassword(text);\n              },\n              secureTextEntry: true\n            }), _jsx(TouchableOpacity, {\n              onPress: goPassReset,\n              style: styles.esqueciButton,\n              children: _jsx(Text, {\n                style: styles.esqueciButton,\n                children: \"Esqueci minha senha.\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#F54038',\n              marginTop: 30\n            },\n            children: [!loading && _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              onPress: verifica,\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Login\"\n                })\n              })\n            }), loading && _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              children: _jsx(View, {\n                style: styles.activeIndicator,\n                children: _jsx(ActivityIndicator, {\n                  size: \"large\",\n                  color: \"#f5f5f5\"\n                })\n              })\n            })]\n          }), _jsx(StatusBar, {\n            style: \"light\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default loginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  HelpMeWrapper: {\n    paddingTop: 10,\n    paddingHorizontal: 20\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold',\n    color: '#ffff'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: 150\n  },\n  esqueciButton: {\n    fontSize: 16,\n    fontFamily: \"Inter_600SemiBold\",\n    color: '#ffff',\n    marginTop: 8\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  },\n  activeIndicator: {\n    height: 60,\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/CÃ³digos/MooviePlus/MooviePlus/screens/loginScreen.js"],"names":["React","useEffect","useState","Toast","StatusBar","useNavigation","auth","loginScreen","navigation","loading","setLoading","email","SetEmail","password","SetPassword","verifica","SingIn","show","unsubscribe","onAuthStateChanged","user","replace","canGoBack","popToTop","signInWithEmailAndPassword","then","userCredential","console","log","displayName","catch","error","errorMessage","message","LONG","goPassReset","navigate","styles","container","HelpMeWrapper","inputContainer","text","input","esqueciButton","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","activeIndicator","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","padding","fontFamily","color","width","height","flexDirection","alignItems","justifyContent","textAlign","alignContent"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity, KeyboardAvoidingView, TextInput, TouchableNativeFeedback, Alert, ActivityIndicator } from 'react-native'\r\nimport Toast from 'react-native-simple-toast';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { auth } from '../firebase';\r\n\r\nconst loginScreen = () => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [email, SetEmail] = useState('')\r\n    const [password, SetPassword] = useState('')\r\n\r\n    const verifica = () => {\r\n        if ((email, password) !== '') {\r\n            setLoading(true)\r\n            SingIn()\r\n        } else {\r\n            setLoading(false)\r\n            Toast.show('Por favor, verifique se todos os campos foram preenchidos.');\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                navigation.replace('Home');\r\n            } else {\r\n                // User is signed out\r\n                navigation.canGoBack() &&\r\n                    navigation.popToTop();\r\n            }\r\n        });\r\n\r\n        return unsubscribe\r\n    })\r\n\r\n\r\n    const SingIn = () => {\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n                console.log(\"Login.Screen | Login-success, navigating to Home Screen\");\r\n                console.log(\"Initial.Screen | \", user.displayName);\r\n                navigation.replace('Home');\r\n                setLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                const errorMessage = error.message;\r\n                setLoading(false)\r\n                Toast.show('Email/Senha incorretos. Verifique os campos preenchidos.', Toast.LONG);\r\n                //\"Por favor, verifique as informaÃ§Ãµes digitadas.\",\r\n            });\r\n    }\r\n\r\n    const goPassReset = () => {\r\n        console.log(\"Initial.Screen | btn-PassReset, navigating to passReset Screen\");\r\n        navigation.navigate(\"PassReset\");\r\n    }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset={-280} style={styles.container} behavior=\"padding\">\r\n\r\n            <SafeAreaView>\r\n                <ScrollView>\r\n\r\n                    <View style={styles.HelpMeWrapper}>\r\n\r\n                        <View style={styles.inputContainer}>\r\n\r\n                            <Text style={styles.text}>Email</Text>\r\n                            <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={styles.input} value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n\r\n                            <Text style={styles.text}>Senha</Text>\r\n                            <TextInput placeholder=\"Digite sua senha\" selectionColor={'grey'} style={styles.input} value={password} onChangeText={text => SetPassword(text)} secureTextEntry></TextInput>\r\n\r\n                            <TouchableOpacity onPress={goPassReset} style={styles.esqueciButton}>\r\n\r\n                                <Text style={styles.esqueciButton}>Esqueci minha senha.</Text>\r\n\r\n                            </TouchableOpacity>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 30 }}>\r\n                            {!loading && (\r\n                                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={verifica}>\r\n\r\n                                    <View style={styles.button}>\r\n                                        <Text style={styles.buttonText}>Login</Text>\r\n                                    </View>\r\n\r\n                                </TouchableNativeFeedback>\r\n                            )}\r\n                            {loading &&\r\n                                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')}>\r\n\r\n                                    <View style={styles.activeIndicator}>\r\n                                        <ActivityIndicator size=\"large\" color=\"#f5f5f5\" />\r\n                                    </View>\r\n\r\n                                </TouchableNativeFeedback>\r\n                            }\r\n                        </View>\r\n                        <StatusBar style=\"light\" />\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default loginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    HelpMeWrapper: {\r\n        paddingTop: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    text: {\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n        color: '#ffff'\r\n    },\r\n    inputContainer: {\r\n        width: '100%',\r\n        marginTop: 150\r\n    },\r\n    esqueciButton: {\r\n        fontSize: 16,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n        color: '#ffff',\r\n        marginTop: 8\r\n    },\r\n    input: {\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n    activeIndicator: {\r\n        height: 60,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}