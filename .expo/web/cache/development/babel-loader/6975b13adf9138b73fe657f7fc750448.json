{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar passResetScreen = function passResetScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var verifica = function verifica() {\n    if (email !== '') {\n      forgotPassword();\n    } else {\n      Alert.alert(\"Oops!\", \"O campo email não foi preenchido.\");\n    }\n  };\n\n  function forgotPassword() {\n    return _regeneratorRuntime.async(function forgotPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().sendPasswordResetEmail(email).then(function () {\n              Alert.alert(\"Redefinição enviada!\", \"Por favor, verifique o seu email.\");\n              {\n                try {\n                  navigation.navigate('Home');\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            }).catch(function (error) {\n              alert(error.message);\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              console.log(errorCode);\n              console.log(errorMessage);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -600,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsxs(ScrollView, {\n        children: [_jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.containerTop,\n            children: [_jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Redefinir Senha\"\n            }), _jsx(Text, {\n              style: styles.sectionText,\n              children: \"Preencha as informa\\xE7\\xF5es abaixo para redefinir sua senha.\"\n            })]\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            })]\n          })]\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(TouchableOpacity, {\n            onPress: verifica,\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.button,\n              children: \"Redefinir\"\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default passResetScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Códigos/MooviePlus/MooviePlus/screens/passResetScreen.js"],"names":["React","passResetScreen","navigation","useNavigation","useState","email","SetEmail","verifica","forgotPassword","Alert","alert","firebase","auth","sendPasswordResetEmail","then","navigate","err","console","error","catch","message","errorCode","code","errorMessage","log","styles","container","HelpMeWrapper","containerTop","sectionTitle","sectionText","inputContainer","text","input","buttonContainer","button","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\n\r\nconst passResetScreen = () => {\r\n    \r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [email, SetEmail] = useState('')\r\n\r\n    \r\n    const verifica = () =>{\r\n        if ((email) !== '' ) {\r\n            forgotPassword()\r\n            } else{\r\n                Alert.alert(\r\n                \"Oops!\",\r\n                \"O campo email não foi preenchido.\",\r\n                )\r\n            }\r\n        }\r\n\r\n    //redefinir Senha\r\n    async function forgotPassword(){\r\n        //redefinir Senha\r\n        await firebase.auth().sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                Alert.alert(\r\n                \"Redefinição enviada!\",\r\n                \"Por favor, verifique o seu email.\",\r\n                );\r\n            {\r\n                try {\r\n                    navigation.navigate('Home');\r\n                } catch (err) {\r\n                    console.error(err);\r\n            }}\r\n            })\r\n        .catch((error) => {\r\n            alert(error.message)\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -600 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n\r\n        <View style={ styles.HelpMeWrapper }>\r\n            <View style={ styles.containerTop }>\r\n          \r\n            <Text style={styles.sectionTitle}>Redefinir Senha</Text>\r\n            <Text style={ styles.sectionText}>Preencha as informações abaixo para redefinir sua senha.</Text>\r\n            </View>\r\n\r\n            <View style={ styles.inputContainer }>\r\n\r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n            </View>\r\n        </View>\r\n\r\n        <View style={ styles.buttonContainer }>\r\n\r\n            <TouchableOpacity onPress={verifica} style={ styles.button }>\r\n    \r\n            <Text style={ styles.button }>Redefinir</Text>\r\n\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default passResetScreen\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}