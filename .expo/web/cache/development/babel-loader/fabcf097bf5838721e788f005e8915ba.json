{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar passResetScreen = function passResetScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var verifica = function verifica() {\n    if (email !== '') {\n      forgotPassword();\n    } else {\n      Alert.alert(\"Eita! Algo deu errado\", \"Por favor, verifique se o campo email foi preenchido.\");\n    }\n  };\n\n  function forgotPassword() {\n    return _regeneratorRuntime.async(function forgotPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().sendPasswordResetEmail(email).then(function () {\n              Alert.alert(\"Redefinição enviada!\", \"Por favor, verifique o seu email.\");\n              {\n                try {\n                  navigation.navigate('Home');\n                } catch (err) {\n                  console.error(err);\n                }\n              }\n            }).catch(function (error) {\n              alert(error.message);\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              console.log(errorCode);\n              console.log(errorMessage);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -280,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            })]\n          }), _jsx(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#1B2727',\n              marginTop: 40\n            },\n            children: _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#F54038'),\n              onPress: verifica,\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Redefinir\"\n                })\n              })\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default passResetScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  HelpMeWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold',\n    color: '#ffff'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: 150\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  }\n});","map":{"version":3,"sources":["D:/Códigos/MooviePlus/MooviePlus/screens/passResetScreen.js"],"names":["React","useState","useNavigation","passResetScreen","navigation","email","SetEmail","verifica","forgotPassword","Alert","alert","firebase","auth","sendPasswordResetEmail","then","navigate","err","console","error","catch","message","errorCode","code","errorMessage","log","styles","container","HelpMeWrapper","inputContainer","text","input","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","padding","fontFamily","color","width","height","flexDirection","alignItems","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, SafeAreaView, ScrollView, TouchableNativeFeedback } from 'react-native'\r\nimport { useState } from 'react';\r\n//import { initializeApp } from 'firebase/app';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst passResetScreen = () => {\r\n    \r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [email, SetEmail] = useState('')\r\n\r\n    \r\n    const verifica = () =>{\r\n        if ((email) !== '' ) {\r\n            forgotPassword()\r\n            } else{\r\n                Alert.alert(\r\n                \"Eita! Algo deu errado\",\r\n                \"Por favor, verifique se o campo email foi preenchido.\",\r\n                )\r\n            }\r\n        }\r\n\r\n    //redefinir Senha\r\n    async function forgotPassword(){\r\n        //redefinir Senha\r\n        await firebase.auth().sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                Alert.alert(\r\n                \"Redefinição enviada!\",\r\n                \"Por favor, verifique o seu email.\",\r\n                );\r\n            {\r\n                try {\r\n                    navigation.navigate('Home');\r\n                } catch (err) {\r\n                    console.error(err);\r\n            }}\r\n            })\r\n        .catch((error) => {\r\n            alert(error.message)\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -280 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n\r\n        <View style={ styles.HelpMeWrapper }>\r\n\r\n            <View style={ styles.inputContainer }>\r\n\r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n            </View>\r\n        \r\n\r\n        <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#1B2727', marginTop: 40}}>\r\n                        <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#F54038')} onPress={verifica}>\r\n                                \r\n                            <View style={ styles.button }>\r\n                                <Text style={ styles.buttonText }>Redefinir</Text>\r\n                            </View>\r\n\r\n                        </TouchableNativeFeedback>\r\n                    </View>\r\n        </View>\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default passResetScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor: '#000'\r\n    },\r\n    HelpMeWrapper:{\r\n        paddingTop: 80,\r\n        paddingHorizontal: 20,\r\n    },\r\n    text:{\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n        color: '#ffff'\r\n    },\r\n    inputContainer:{\r\n        width:'100%',\r\n        marginTop: 150  \r\n    },\r\n    input:{\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    button:{\r\n        flexDirection: 'row',\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}