{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { useState } from 'react';\nimport { auth } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar passResetScreen = function passResetScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var verifica = function verifica() {\n    if (email !== '') {\n      forgotPassword();\n      setLoading(true);\n    } else {\n      Alert.alert(\"Campo em branco\", \"Por favor, verifique se o campo email foi preenchido.\");\n    }\n  };\n\n  var forgotPassword = function forgotPassword() {\n    auth.sendPasswordResetEmail(email).then(function () {\n      Alert.alert(\"Redefinição enviada\", \"Por favor, verifique o seu email.\");\n      navigation.popToTop();\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -280,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            })]\n          }), _jsxs(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#F54038',\n              marginTop: 40\n            },\n            children: [!loading && _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              onPress: verifica,\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Redefinir\"\n                })\n              })\n            }), loading && _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              children: _jsx(View, {\n                style: styles.activeIndicator,\n                children: _jsx(ActivityIndicator, {\n                  size: \"large\",\n                  color: \"#f5f5f5\"\n                })\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default passResetScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  HelpMeWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold',\n    color: '#ffff'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: 150\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  }\n});","map":{"version":3,"sources":["D:/Códigos/MooviePlus/MooviePlus/screens/passResetScreen.js"],"names":["React","useState","auth","useNavigation","passResetScreen","navigation","email","SetEmail","loading","setLoading","verifica","forgotPassword","Alert","alert","sendPasswordResetEmail","then","popToTop","catch","error","errorCode","code","errorMessage","message","styles","container","HelpMeWrapper","inputContainer","text","input","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","activeIndicator","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","padding","fontFamily","color","width","height","flexDirection","alignItems","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, SafeAreaView, ScrollView, TouchableNativeFeedback } from 'react-native'\r\nimport { useState } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst passResetScreen = () => {\r\n\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [email, SetEmail] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const verifica = () => {\r\n        if ((email) !== '') {\r\n            forgotPassword()\r\n            setLoading(true)\r\n        } else {\r\n            Alert.alert(\r\n                \"Campo em branco\",\r\n                \"Por favor, verifique se o campo email foi preenchido.\",\r\n            )\r\n        }\r\n    }\r\n\r\n    //redefinir Senha\r\n    const forgotPassword = () => {\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                // Password reset email sent!\r\n                Alert.alert(\r\n                    \"Redefinição enviada\",\r\n                    \"Por favor, verifique o seu email.\",\r\n                )\r\n                navigation.popToTop();\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // ..\r\n            });\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset={-280} style={styles.container} behavior=\"padding\">\r\n\r\n            <SafeAreaView>\r\n                <ScrollView>\r\n\r\n                    <View style={styles.HelpMeWrapper}>\r\n\r\n                        <View style={styles.inputContainer}>\r\n\r\n                            <Text style={styles.text}>Email</Text>\r\n                            <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={styles.input} value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n                        </View>\r\n\r\n\r\n                        <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 40 }}>\r\n                            {!loading && (\r\n                                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={verifica}>\r\n\r\n                                    <View style={styles.button}>\r\n                                        <Text style={styles.buttonText}>Redefinir</Text>\r\n                                    </View>\r\n\r\n                                </TouchableNativeFeedback>\r\n                            )}\r\n                            {loading &&\r\n                                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')}>\r\n\r\n                                    <View style={styles.activeIndicator}>\r\n                                        <ActivityIndicator size=\"large\" color=\"#f5f5f5\" />\r\n                                    </View>\r\n\r\n                                </TouchableNativeFeedback>\r\n                            }\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default passResetScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    HelpMeWrapper: {\r\n        paddingTop: 80,\r\n        paddingHorizontal: 20,\r\n    },\r\n    text: {\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n        color: '#ffff'\r\n    },\r\n    inputContainer: {\r\n        width: '100%',\r\n        marginTop: 150\r\n    },\r\n    input: {\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}