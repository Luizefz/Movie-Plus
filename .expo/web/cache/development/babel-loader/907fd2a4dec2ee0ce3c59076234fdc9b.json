{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar registerScreen = function registerScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      SetEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      SetPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nome = _useState8[0],\n      SetNome = _useState8[1];\n\n  var handleSingUp = function handleSingUp() {\n    setLoading(true);\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      user.updateProfile({\n        displayName: nome\n      }).then(function () {\n        console.log(\"Register.Screen | Cadastro-success, navigating to Initial Screen\");\n        console.log(\"Register.Screen | \", user.displayName);\n      }).catch(function (error) {});\n      navigation.popToTop();\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(\"Algo deu errado\", errorMessage);\n    });\n  };\n\n  var verifica = function verifica() {\n    if ((nome, email, password) !== '') {\n      handleSingUp();\n    } else {\n      Alert.alert(\"Campo em branco\", \"Por favor, verifique se os campos foram preenchidos.\");\n    }\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -480,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Nome\"\n            }), _jsx(TextInput, {\n              placeholder: \"Eduardo\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: nome,\n              onChangeText: function onChangeText(text) {\n                return SetNome(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Senha\"\n            }), _jsx(TextInput, {\n              placeholder: \"Digite sua senha\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return SetPassword(text);\n              },\n              secureTextEntry: true\n            })]\n          }), !loading && _jsx(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#F54038',\n              marginTop: 30\n            },\n            children: _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              onPress: verifica,\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Cadastrar\"\n                })\n              })\n            })\n          }), loading && _jsx(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#F54038',\n              marginTop: 30,\n              height: 80\n            },\n            children: _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              children: _jsx(View, {\n                style: styles.loading,\n                children: _jsx(ActivityIndicator, {\n                  size: \"large\",\n                  color: \"#f5f5f5\"\n                })\n              })\n            })\n          }), _jsx(StatusBar, {\n            style: \"light\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default registerScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  HelpMeWrapper: {\n    paddingTop: 10,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: \"Inter_600SemiBold\"\n  },\n  sectionText: {\n    fontSize: 20,\n    fontFamily: 'Inter_500Medium'\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold',\n    color: '#ffff'\n  },\n  inputContainer: {\n    marginTop: '30%'\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  },\n  activeIndicator: {\n    justifyContent: 'center',\n    alignContent: 'center',\n    position: 'absolute'\n  }\n});","map":{"version":3,"sources":["D:/CÃ³digos/MooviePlus/MooviePlus/screens/registerScreen.js"],"names":["React","useState","StatusBar","auth","registerScreen","navigation","loading","setLoading","email","SetEmail","password","SetPassword","nome","SetNome","handleSingUp","createUserWithEmailAndPassword","then","userCredential","user","updateProfile","displayName","console","log","catch","error","popToTop","errorCode","code","errorMessage","message","Alert","alert","verifica","styles","container","HelpMeWrapper","inputContainer","text","input","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","height","StyleSheet","create","flex","paddingTop","paddingHorizontal","sectionTitle","fontSize","fontFamily","sectionText","padding","color","flexDirection","alignItems","justifyContent","textAlign","activeIndicator","alignContent","position"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { KeyboardAvoidingView, SafeAreaView, ScrollView, StyleSheet, Text, View, TouchableNativeFeedback, Alert, TextInput, ActivityIndicator } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth } from '../firebase';\r\n\r\nconst registerScreen = ({ navigation }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [email, SetEmail] = useState('')\r\n    const [password, SetPassword] = useState('')\r\n    const [nome, SetNome] = useState('')\r\n\r\n    const handleSingUp = () => {\r\n        setLoading(true)\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                const user = userCredential.user;\r\n                user.updateProfile({\r\n                    displayName: nome //photoURL: imageURL? : \"https://cdn.dribbble.com/users/225451/screenshots/3841820/media/5e2f1fcec4a8f13aa47f828b4cf81234.png?compress=1&resize=800x600&vertical=top\"\r\n                }).then(() => {\r\n                    console.log(\"Register.Screen | Cadastro-success, navigating to Initial Screen\");\r\n                    console.log(\"Register.Screen | \", user.displayName);\r\n                    // Profile updated!\r\n                }).catch((error) => {\r\n                    // An error occurred\r\n                    // ...\r\n                });\r\n                navigation.popToTop();\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                Alert.alert(\r\n                    \"Algo deu errado\",\r\n                    errorMessage,\r\n                )\r\n            });\r\n    }\r\n\r\n\r\n    const verifica = () => {\r\n        if ((nome, email, password) !== '') {\r\n            handleSingUp()\r\n        } else {\r\n            Alert.alert(\r\n                \"Campo em branco\",\r\n                \"Por favor, verifique se os campos foram preenchidos.\",\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset={-480} style={styles.container} behavior=\"padding\">\r\n\r\n            <SafeAreaView>\r\n                <ScrollView>\r\n                    <View style={styles.HelpMeWrapper}>\r\n\r\n                        <View style={styles.inputContainer}>\r\n\r\n                            <Text style={styles.text}>Nome</Text>\r\n                            <TextInput placeholder=\"Eduardo\" selectionColor={'grey'} style={styles.input} value={nome} onChangeText={text => SetNome(text)}></TextInput>\r\n\r\n                            <Text style={styles.text}>Email</Text>\r\n                            <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={styles.input} value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n\r\n                            <Text style={styles.text}>Senha</Text>\r\n                            <TextInput placeholder=\"Digite sua senha\" selectionColor={'grey'} style={styles.input} value={password} onChangeText={text => SetPassword(text)} secureTextEntry></TextInput>\r\n\r\n                        </View>\r\n\r\n                        {!loading && (\r\n\r\n                            <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 30 }}>\r\n                                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={verifica}>\r\n\r\n                                    <View style={styles.button}>\r\n                                        <Text style={styles.buttonText}>Cadastrar</Text>\r\n                                    </View>\r\n\r\n\r\n                                </TouchableNativeFeedback>\r\n                            </View>\r\n\r\n                        )}\r\n\r\n                        {loading &&\r\n                            <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 30, height: 80 }}>\r\n                                <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')}>\r\n\r\n                                    <View style={styles.loading}>\r\n                                        <ActivityIndicator size=\"large\" color=\"#f5f5f5\" />\r\n                                    </View>\r\n\r\n                                </TouchableNativeFeedback>\r\n                            </View>\r\n                        }\r\n\r\n\r\n\r\n\r\n                        <StatusBar style=\"light\" />\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default registerScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    HelpMeWrapper: {\r\n        paddingTop: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 24,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n    },\r\n    sectionText: {\r\n        fontSize: 20,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    text: {\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n        color: '#ffff'\r\n    },\r\n    inputContainer: {\r\n        marginTop: '30%'\r\n    },\r\n    input: {\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n    activeIndicator: {\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        position: 'absolute'\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}