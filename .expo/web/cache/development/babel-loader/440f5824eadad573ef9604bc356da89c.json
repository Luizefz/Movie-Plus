{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar registerScreen = function registerScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      shouldShow = _useState2[0],\n      setShouldShow = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      SetEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      SetPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      verifypassword = _useState8[0],\n      SetVerifyPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      municipio = _useState10[0],\n      SetMunicipio = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nome = _useState12[0],\n      SetNome = _useState12[1];\n\n  var verifica = function verifica() {\n    if ((email, password) !== '') {\n      handleSingUp();\n    } else {\n      Alert.alert(\"\", \"Por favor, verifique se os campos foram preenchidos.\");\n    }\n  };\n\n  var handleSingUp = function handleSingUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Novo usuário criado', user.email);\n      Alert.alert(\"Sucesso!\", \"O usuário foi criado.\");\n      {\n        try {\n          navigation.navigate('Home');\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -280,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.containerTop,\n            children: [_jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Cadastro\"\n            }), _jsx(Text, {\n              style: styles.sectionText,\n              children: \"Preencha as informa\\xE7\\xF5es abaixo para realizar o cadastro.\"\n            })]\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Senha\"\n            }), _jsx(TextInput, {\n              placeholder: \"Digite sua senha\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return SetPassword(text);\n              },\n              secureTextEntry: true\n            })]\n          }), _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(TouchableOpacity, {\n              onPress: verifica,\n              style: styles.button,\n              children: _jsx(Text, {\n                style: styles.button,\n                children: \"Cadastrar\"\n              })\n            })\n          }), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default registerScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  HelpMeWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: \"Inter_600SemiBold\"\n  },\n  sectionText: {\n    fontSize: 20,\n    fontFamily: 'Inter_500Medium'\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: '30%'\n  },\n  arrowButton: {\n    marginTop: 8\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  buttonContainer: {\n    width: '100%',\n    marginTop: 40,\n    justifyContent: 'center'\n  },\n  buttonArrowContainer: {\n    width: '100%',\n    marginTop: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  button: {\n    backgroundColor: '#0c72c4',\n    width: '100%',\n    height: 70,\n    fontFamily: 'Inter_500Medium',\n    fontSize: 27,\n    textAlign: 'center',\n    color: 'white',\n    textAlignVertical: 'center',\n    marginBottom: 10,\n    paddingBottom: 5,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["D:/Códigos/MooviePlus/MooviePlus/screens/registerScreen.js"],"names":["React","useState","useNavigation","StatusBar","auth","registerScreen","navigation","shouldShow","setShouldShow","email","SetEmail","password","SetPassword","verifypassword","SetVerifyPassword","municipio","SetMunicipio","nome","SetNome","verifica","handleSingUp","Alert","alert","createUserWithEmailAndPassword","then","userCredentials","user","console","log","navigate","err","error","catch","message","styles","container","HelpMeWrapper","containerTop","sectionTitle","sectionText","inputContainer","text","input","buttonContainer","button","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","fontFamily","padding","width","marginTop","arrowButton","backgroundColor","height","borderRadius","justifyContent","buttonArrowContainer","alignItems","paddingBottom","textAlign","color","textAlignVertical","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { KeyboardAvoidingView, SafeAreaView, ScrollView, StyleSheet, Text, View, Image, Alert, TextInput, TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth } from '../firebase';\r\n\r\nconst registerScreen = () => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [shouldShow, setShouldShow] = useState(true);\r\n\r\n    const [email, SetEmail] = useState('')\r\n    const [password, SetPassword] = useState('')\r\n    const [verifypassword, SetVerifyPassword] = useState('')\r\n    const [municipio, SetMunicipio] = useState('')\r\n    const [nome, SetNome] = useState('')\r\n\r\n    \r\n    const verifica = () =>{\r\n        if ((email, password) !== '' ) {\r\n            handleSingUp()\r\n            } else{\r\n                Alert.alert(\r\n                    \"\",\r\n                    \"Por favor, verifique se os campos foram preenchidos.\",\r\n                )\r\n            }\r\n        }\r\n\r\n    const handleSingUp = () =>{\r\n        auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(userCredentials => {\r\n            const user = userCredentials.user;\r\n            console.log('Novo usuário criado', user.email)\r\n            Alert.alert(\r\n                \"Sucesso!\",\r\n                \"O usuário foi criado.\",\r\n                );\r\n            {\r\n                try {\r\n                    navigation.navigate('Home');\r\n                } catch (err) {\r\n                    console.error(err);\r\n            }}\r\n            })\r\n            .catch(error => alert(error.message))\r\n            }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -280 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n        <View style={ styles.HelpMeWrapper }>\r\n            <View style={ styles.containerTop }>\r\n          \r\n            <Text style={styles.sectionTitle}>Cadastro</Text>\r\n            <Text style={ styles.sectionText}>Preencha as informações abaixo para realizar o cadastro.</Text>\r\n            </View>\r\n\r\n            <View style={ styles.inputContainer }>\r\n                \r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n\r\n                <Text style={ styles.text }>Senha</Text>\r\n                <TextInput placeholder=\"Digite sua senha\" selectionColor={'grey'} style={ styles.input } value={password} onChangeText={text => SetPassword(text)} secureTextEntry></TextInput>\r\n            \r\n            </View>\r\n            \r\n            <View style={ styles.buttonContainer }>\r\n\r\n                \r\n                <TouchableOpacity onPress={verifica}\r\n                style={ styles.button }>\r\n                    \r\n                    <Text style={ styles.button }>Cadastrar</Text>\r\n\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n            <StatusBar style=\"auto\" />\r\n        </View>\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default registerScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n    },\r\n    HelpMeWrapper:{\r\n        paddingTop: 80,\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionTitle:{\r\n        fontSize: 24,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n    },\r\n    sectionText:{\r\n        fontSize: 20,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    text:{\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n    },\r\n    inputContainer:{\r\n        width:'100%',\r\n        marginTop: '30%'\r\n    },\r\n    arrowButton:{\r\n        marginTop: 8\r\n    },\r\n    input:{\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    buttonContainer:{\r\n        width: '100%',\r\n        marginTop: 40,\r\n        justifyContent: 'center',\r\n    },\r\n    buttonArrowContainer:{\r\n        width: '100%',\r\n        marginTop: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingBottom: 5\r\n    },\r\n    button:{\r\n        backgroundColor: '#0c72c4',\r\n        width: '100%',\r\n        height: 70,\r\n        fontFamily: 'Inter_500Medium',\r\n        fontSize: 27,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textAlignVertical: 'center',\r\n        marginBottom: 10,\r\n        paddingBottom: 5,\r\n        borderRadius: 10\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}