{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/native';\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar registerScreen = function registerScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      SetPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nome = _useState6[0],\n      SetNome = _useState6[1];\n\n  var handleSingUp = function handleSingUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      user.updateProfile({\n        displayName: nome\n      }).then(function () {}).catch(function (error) {});\n      navigation.popToTop();\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(\"Algo deu errado\", errorMessage);\n    });\n  };\n\n  var goInitial = function goInitial() {\n    console.log(\"registerScreen | success, the data was save. navigating to Initial Screen\");\n    navigation.replace(\"Initial\");\n  };\n\n  var verifica = function verifica() {\n    if ((nome, email, password) !== '') {\n      handleSingUp();\n    } else {\n      Alert.alert(\"Campo em branco\", \"Por favor, verifique se os campos foram preenchidos.\");\n    }\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -480,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Nome\"\n            }), _jsx(TextInput, {\n              placeholder: \"Eduardo\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: nome,\n              onChangeText: function onChangeText(text) {\n                return SetNome(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Senha\"\n            }), _jsx(TextInput, {\n              placeholder: \"Digite sua senha\",\n              selectionColor: 'grey',\n              style: styles.input,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return SetPassword(text);\n              },\n              secureTextEntry: true\n            })]\n          }), _jsx(View, {\n            style: {\n              borderRadius: 40,\n              overflow: \"hidden\",\n              backgroundColor: '#F54038',\n              marginTop: 30\n            },\n            children: _jsx(TouchableNativeFeedback, {\n              background: TouchableNativeFeedback.Ripple('#1B2727'),\n              onPress: verifica,\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Cadastrar\"\n                })\n              })\n            })\n          }), _jsx(StatusBar, {\n            style: \"light\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default registerScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  HelpMeWrapper: {\n    paddingTop: 10,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: \"Inter_600SemiBold\"\n  },\n  sectionText: {\n    fontSize: 20,\n    fontFamily: 'Inter_500Medium'\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold',\n    color: '#ffff'\n  },\n  inputContainer: {\n    marginTop: '30%'\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Inter_500Medium',\n    textAlign: 'center',\n    color: '#f5f5f5',\n    fontSize: 23\n  }\n});","map":{"version":3,"sources":["D:/CÃ³digos/MooviePlus/MooviePlus/screens/registerScreen.js"],"names":["React","useState","useNavigation","StatusBar","auth","registerScreen","navigation","email","SetEmail","password","SetPassword","nome","SetNome","handleSingUp","createUserWithEmailAndPassword","then","userCredential","user","updateProfile","displayName","catch","error","popToTop","errorCode","code","errorMessage","message","Alert","alert","goInitial","console","log","replace","verifica","styles","container","HelpMeWrapper","inputContainer","text","input","borderRadius","overflow","backgroundColor","marginTop","TouchableNativeFeedback","Ripple","button","buttonText","StyleSheet","create","flex","paddingTop","paddingHorizontal","sectionTitle","fontSize","fontFamily","sectionText","padding","color","height","flexDirection","alignItems","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { KeyboardAvoidingView, SafeAreaView, ScrollView, StyleSheet, Text, View, TouchableNativeFeedback, Alert, TextInput, } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth } from '../firebase';\r\n\r\nconst registerScreen = ({ navigation }) => {\r\n\r\n\r\n    const [email, SetEmail] = useState('')\r\n    const [password, SetPassword] = useState('')\r\n    const [nome, SetNome] = useState('')\r\n\r\n    const handleSingUp = () => {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                const user = userCredential.user;\r\n                user.updateProfile({\r\n                    displayName: nome //photoURL: imageURL? : \"https://example.com/jane-q-user/profile.jpg\"\r\n                  }).then(() => {\r\n                    // Profile updated!\r\n                  }).catch((error) => {\r\n                    // An error occurred\r\n                    // ...\r\n                  });\r\n                  navigation.popToTop();\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                Alert.alert(\r\n                    \"Algo deu errado\",\r\n                    errorMessage,\r\n                )\r\n            });\r\n    }\r\n\r\n    const goInitial = () => {\r\n        console.log(\"registerScreen | success, the data was save. navigating to Initial Screen\");\r\n        navigation.replace(\"Initial\");\r\n      }\r\n\r\n    \r\n    const verifica = () =>{\r\n        if ((nome, email, password) !== '' ) {\r\n            handleSingUp()\r\n            } else{\r\n                Alert.alert(\r\n                    \"Campo em branco\",\r\n                    \"Por favor, verifique se os campos foram preenchidos.\",\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -480 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n        <View style={ styles.HelpMeWrapper }>\r\n\r\n            <View style={ styles.inputContainer }>\r\n                \r\n                <Text style={ styles.text }>Nome</Text>\r\n                <TextInput placeholder=\"Eduardo\" selectionColor={'grey'} style={ styles.input } value={nome} onChangeText={text => SetNome(text)}></TextInput>\r\n\r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" selectionColor={'grey'} style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n\r\n                <Text style={ styles.text }>Senha</Text>\r\n                <TextInput placeholder=\"Digite sua senha\" selectionColor={'grey'} style={ styles.input } value={password} onChangeText={text => SetPassword(text)} secureTextEntry></TextInput>\r\n            \r\n            </View>\r\n            \r\n            <View style={{ borderRadius: 40, overflow: \"hidden\", backgroundColor: '#F54038', marginTop: 30}}>\r\n                        <TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('#1B2727')} onPress={verifica}>\r\n                                \r\n                            <View style={ styles.button }>\r\n                                <Text style={ styles.buttonText }>Cadastrar</Text>\r\n                            </View>\r\n\r\n                        </TouchableNativeFeedback>\r\n                    </View>\r\n            <StatusBar style=\"light\" />\r\n        </View>\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default registerScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor: '#000'\r\n    },\r\n    HelpMeWrapper:{\r\n        paddingTop: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionTitle:{\r\n        fontSize: 24,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n    },\r\n    sectionText:{\r\n        fontSize: 20,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    text:{\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n        color: '#ffff'\r\n    },\r\n    inputContainer:{\r\n        marginTop: '30%'\r\n    },\r\n    input:{\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    button:{\r\n        flexDirection: 'row',\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Inter_500Medium',\r\n        textAlign: 'center',\r\n        color: '#f5f5f5',\r\n        fontSize: 23,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}