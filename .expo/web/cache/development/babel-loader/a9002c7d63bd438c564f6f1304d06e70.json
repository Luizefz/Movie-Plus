{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar loginScreen = function loginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      SetEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      SetPassword = _useState4[1];\n\n  var verifica = function verifica() {\n    if ((email, password) !== '') {\n      handleSingIn();\n    } else {\n      Alert.alert(\"Oops!\", \"Os campos não foram preenchidos.\");\n    }\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -600,\n    style: styles.container,\n    behavior: \"padding\",\n    children: _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: styles.HelpMeWrapper,\n          children: [_jsx(View, {\n            children: _jsx(Text, {\n              style: styles.sectionText,\n              children: \"Preencha as informa\\xE7\\xF5es abaixo para realizar o login.\"\n            })\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              placeholder: \"exemplo@email.com\",\n              style: styles.input,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return SetEmail(text);\n              }\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"Senha\"\n            }), _jsx(TextInput, {\n              placeholder: \"Digite sua senha\",\n              style: styles.input,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return SetPassword(text);\n              },\n              secureTextEntry: true\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                try {\n                  navigation.navigate('ResetPassword');\n                } catch (err) {\n                  console.error(err);\n                }\n              },\n              style: styles.esqueciButton,\n              children: _jsx(Text, {\n                style: styles.esqueciButton,\n                children: \"Esqueci minha senha.\"\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(TouchableOpacity, {\n              onPress: verifica,\n              style: styles.button,\n              children: _jsx(Text, {\n                style: styles.button,\n                children: \"Login\"\n              })\n            })\n          }), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default loginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  HelpMeWrapper: {\n    paddingTop: 10,\n    paddingHorizontal: 20\n  },\n  sectionText: {\n    fontSize: 20,\n    fontFamily: 'Inter_500Medium',\n    color: '#ffff'\n  },\n  text: {\n    fontSize: 25,\n    padding: '2%',\n    fontFamily: 'Inter_600SemiBold'\n  },\n  inputContainer: {\n    width: '100%',\n    marginTop: 150\n  },\n  esqueciButton: {\n    fontSize: 16,\n    fontFamily: \"Inter_600SemiBold\",\n    marginTop: 8\n  },\n  input: {\n    backgroundColor: '#d9d9d9',\n    height: 70,\n    borderRadius: 10,\n    padding: 10,\n    fontSize: 16,\n    fontFamily: 'Inter_500Medium'\n  },\n  buttonContainer: {\n    width: '100%',\n    marginTop: 40,\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: '#0c72c4',\n    width: '100%',\n    height: 70,\n    fontFamily: 'Inter_500Medium',\n    fontSize: 27,\n    textAlign: 'center',\n    color: 'white',\n    textAlignVertical: 'center',\n    paddingBottom: 5,\n    marginBottom: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["D:/Códigos/MooviePlus/MooviePlus/screens/loginScreen.js"],"names":["React","useState","useEffect","StatusBar","auth","loginScreen","email","SetEmail","password","SetPassword","verifica","handleSingIn","Alert","alert","styles","container","HelpMeWrapper","sectionText","inputContainer","text","input","navigation","navigate","err","console","error","esqueciButton","buttonContainer","button","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontFamily","color","padding","width","marginTop","height","borderRadius","justifyContent","textAlign","textAlignVertical","paddingBottom","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity, KeyboardAvoidingView, TextInput,TouchableNativeFeedback } from 'react-native'\r\nimport { useState, useEffect } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth } from '../firebase';\r\n\r\nconst loginScreen = () => {\r\n\r\n    const [email, SetEmail] = useState('')\r\n    const [password, SetPassword] = useState('')\r\n\r\n    const verifica = () =>{\r\n        if ((email, password) !== '' ) {\r\n            handleSingIn()\r\n            } else{\r\n                Alert.alert(\r\n                \"Oops!\",\r\n                \"Os campos não foram preenchidos.\",\r\n                )\r\n            }\r\n    }\r\n    \r\n    return (\r\n        <KeyboardAvoidingView keyboardVerticalOffset = { -600 } style={ styles.container } behavior=\"padding\">\r\n\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n\r\n        <View style={ styles.HelpMeWrapper }>\r\n\r\n            <View>\r\n          \r\n                <Text style={ styles.sectionText}>Preencha as informações abaixo para realizar o login.</Text>\r\n\r\n            </View>\r\n\r\n            <View style={ styles.inputContainer }>\r\n\r\n                <Text style={ styles.text }>Email</Text>\r\n                <TextInput placeholder=\"exemplo@email.com\" style={ styles.input } value={email} onChangeText={text => SetEmail(text)}></TextInput>\r\n\r\n                <Text style={ styles.text }>Senha</Text>\r\n                <TextInput placeholder=\"Digite sua senha\" style={ styles.input } value={password} onChangeText={text => SetPassword(text)} secureTextEntry></TextInput>\r\n\r\n                <TouchableOpacity onPress={() => {\r\n                try {\r\n                    navigation.navigate('ResetPassword');\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }}} style={ styles.esqueciButton }>\r\n\r\n                    <Text style={ styles.esqueciButton }>Esqueci minha senha.</Text>\r\n\r\n                </TouchableOpacity>\r\n            \r\n            </View>\r\n        \r\n            <View style={ styles.buttonContainer }>\r\n\r\n                <TouchableOpacity onPress={verifica}\r\n                style={ styles.button }>\r\n                    \r\n                    <Text style={ styles.button }>Login</Text>\r\n\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n            <StatusBar style=\"auto\" />\r\n        </View>\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default loginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor: '#000'\r\n    },\r\n    HelpMeWrapper:{\r\n        paddingTop: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionText:{\r\n        fontSize: 20,\r\n        fontFamily: 'Inter_500Medium',\r\n        color: '#ffff'\r\n    },\r\n    text:{\r\n        fontSize: 25,\r\n        padding: '2%',\r\n        fontFamily: 'Inter_600SemiBold',\r\n    },\r\n    inputContainer:{\r\n        width:'100%',\r\n        marginTop: 150  \r\n    },\r\n    esqueciButton:{\r\n        fontSize: 16,\r\n        fontFamily: \"Inter_600SemiBold\",\r\n        marginTop: 8\r\n    },\r\n    input:{\r\n        backgroundColor: '#d9d9d9',\r\n        height: 70,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontSize: 16,\r\n        fontFamily: 'Inter_500Medium',\r\n    },\r\n    buttonContainer:{\r\n        width: '100%',\r\n        marginTop: 40,\r\n        justifyContent: 'center',\r\n    },\r\n    button:{\r\n        backgroundColor: '#0c72c4',\r\n        width: '100%',\r\n        height: 70,\r\n        fontFamily: 'Inter_500Medium',\r\n        fontSize: 27,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textAlignVertical: 'center',\r\n        paddingBottom: 5,\r\n        marginBottom: 10,\r\n        borderRadius: 10\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}